name: Tests

on:
  pull_request:
    paths:
      - 'api/**'
      - 'resources/*.postman_*.json'

jobs:
  install-deps:
    name: Install Composer Dependencies
    runs-on: ubuntu-latest
    env:
      WITH_DOCKER: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache
            api/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist
        working-directory: api

  phpunit:
    name: PHP tests
    runs-on: ubuntu-latest
    needs: install-deps
    env:
      WITH_DOCKER: 0

    services:
      mariadb:
        image: mariadb:10.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: app

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/app?serverVersion=10.4.34-MariaDB&charset=utf8mb4
      REDIS_URL: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache
            api/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4

      - name: Setup tests environment
        run: make pretests

      - name: Run PHPUnit
        run: make tests

  postman-tests:
    runs-on: ubuntu-latest
    env:
      DOCKER_TARGET: test
      COMPOSE_COMMAND: docker compose -f compose.ci.yml

    services:
      docker:
        image: docker:20.10.24
        options: --privileged
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Up containers
      run: ${COMPOSE_COMMAND} up -d php redis db

    - name: Wait for services to be ready
      run: sleep 10

    - name: Setup containers
      run: |
        ${COMPOSE_COMMAND} exec php bin/console doctrine:database:create --if-not-exists
        ${COMPOSE_COMMAND} exec php bin/console doctrine:schema:update --force
        ${COMPOSE_COMMAND} exec php bin/console doctrine:fixtures:load --no-interaction --group=postman
        ${COMPOSE_COMMAND} exec php bin/console lexik:jwt:generate-keypair --no-interaction --overwrite

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Newman
      run: npm install -g newman

    - name: Run Postman Collection
      run: newman run resources/danin_e2e.postman_collection.json --environment resources/danin_e2e.postman_environment.json
